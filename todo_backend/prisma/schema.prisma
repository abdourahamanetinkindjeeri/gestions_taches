generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Statut {
  EN_ATTENTE
  EN_COURS
  TERMINEE
}

enum Role {
  USER
  PROPRIETAIRE
}
model Todo {
  id Int @id  @default(autoincrement())
  libelle String
  description String?
  status Statut @default(EN_COURS)
  estAcheve Boolean @default(false)
  dateCreation DateTime @default(now())
  derniereModif DateTime @updatedAt
  userId Int
  user User @relation(fields: [userId], references: [id])
  delegations TaskDelegation[]
  photo String?
  vocal String?
  histories TodoHistory[]
  tempsExecution Int @default(0) 
  dateDebut DateTime?
}

model User {
  id Int @id @default(autoincrement())
  nom String
  prenom String
  email String @unique
  password String
  role Role @default(USER)
  dateCreation DateTime @default(now())
  derniereModif DateTime @updatedAt
  todos Todo[]
  delegatedTasks TaskDelegation[]
  todoHistories TodoHistory[]
}

model TaskDelegation {
  id        Int    @id @default(autoincrement())
  todo      Todo   @relation(fields: [todoId], references: [id], onDelete: Cascade)
  todoId    Int
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model TodoHistory {
  id            Int      @id @default(autoincrement())
  todoId        Int
  userId        Int
  action        String
  estLu         Boolean @default(false)
  description   String?
  createdAt     DateTime @default(now())
  todo          Todo     @relation(fields: [todoId], references: [id], onDelete: Cascade)
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
